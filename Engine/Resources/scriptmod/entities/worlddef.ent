
world {
	sceneNode {
		origin "1 2 3" 
	}
	
	worldInfo {
		ambientLight "1 1 1"
		playerController player:controller
		gravity "0 0 0"
	}	
}


music {
	soundGlobal source {
		
	}
}

class elev_corner_base {
	sceneNode {
		model "gen:cube width 2 height 106 depth 0.1 texheight 106 texwidth 0.1 texdepth 0.1"
	}
	
	physGeom {
		type box
		dimensions "2 106 0.1"
		link sceneNode
	}
}


ecorner1 extends elev_corner_base {
	sceneNode {
		origin "-5 50 -1"
	}
}

ecorner2 extends elev_corner_base {
	sceneNode {
		origin "-5 50 1"
	}
}

ecorner3 extends elev_corner_base {
	sceneNode {
		origin "-6 50 0"
		orientation "1 0 0"
	}
}

ecorner4 {
	sceneNode {
		model "gen:cube width 1 height 96 depth 0.1 texheight 102 texwidth 0.1 texdepth 0.1"
		origin "-4 51 0"
		orientation "1 0 0"
	}
	
	physGeom {
		type box
		dimensions "2 96 0.1"
		link sceneNode
	}

}

end {
	sceneNode {
		origin "-10 3 0"
		model "gen:cube width 0.1 height 3 depth 0.1 texheight 3 texwidth 0.1 texdepth 0.1"
	}
}

elevator {
	sceneNode floor {
		origin "-5 0 0"
		model "gen:cube width 1.5 height 0.1 depth 1.5" //"models/rocketl.md3 preset idtech"
	}

	sceneNode floor_stick {
		origin "0 -50 0"
		parent floor
		model "gen:cube width .3 height 100 depth .3 texheight 100" //"models/rocketl.md3 preset idtech"
	}

	sceneNode ceiling {
		parent floor

		origin "0 2.4 0"
		model "gen:cube width 2 height 0.1 depth 2" //"models/rocketl.md3 preset idtech"
	}
	
	physGeom floor_geom {
		type box
		dimensions "2 0.1 2"
		link floor
	}

	physGeom ceiling_geom {
		type box
		dimensions "2 0.1 2"
		link ceiling
	}
	
	interpolator {
		link floor

		keypoints {
			"-5 0.5 0"
			"-5 100 0"
		}
		
		type linear
		speed 0
	}
}



class elevator_button {
	sceneNode {
		model "gen:cube width .2 height .2 depth .2"
	}
	
	physGeom {
		type box
		dimensions ".2 .2 .2"
		link sceneNode
		category "button"
		collidesWith "player"		// TODO: doesn't really work
	}
}


inside_elevator_button extends elevator_button {
	sceneNode {
		origin "-1 1.5 0"
		parent elevator:floor
	}
}


ground_button extends elevator_button {
	sceneNode {
		origin "-4 1.5 1.5"
	}
}

upper_floor {
	sceneNode floor {
		model "gen:cube width 8 height 0.3 depth 2"
		origin "0 99.9 0"
	}
	
	physGeom floor_geom {
		link floor
		
		type box
		dimensions "8 0.3 2"
	}
}



box1 {
	worldInterface sceneNode
	
	sceneNode {
		//parent world:sceneNode
		origin "0 1 10"
		
		model "gen:cube width 3.0 height 1.0 depth 1.0 texwidth 3"
	}
	
	timer materialChanger {
		interval 1.0
	}
	
	timer timer2 {
		interval 0.05
		enabled false
	}
	
	
	soundLocal {
		link sceneNode
		
	} 
	
	physBody {
		link sceneNode
		//autoDisable false
	}

	physGeom {
		type box
		dimensions "3 1 1"
		link physBody
		friction 2

	}
}


ground {
	sceneNode {
		origin "0 0 0"
		material "dirt03"
		model "gen:cube width 100.0 height 1.0 depth 100.0 texwidth 100.0 texdepth 100.0"
		
	}
	
	physGeom {
		link sceneNode
		type box
		dimensions "100 1 100"
	}

}

teleportground {
	sceneNode {
		origin "0 -60 0"
	}
	
	physGeom {
		link sceneNode
		type box
		dimensions "300 1 300"
	}
}

teleportstart {
	worldInterface sceneNode
	
	sceneNode {
		origin "0 4 0"
	}
	
	soundLocal {
		link sceneNode	
	} 
}

player {
	worldInterface origin
	
	///////////////////////////////////////////////////////////////
	// visual & spatial representations
	///////////////////////////////////////////////////////////////
	
	sceneNode origin {
		origin "0 2 0"
	}
	
	sceneNode head_cam_joint {
		origin "0 0.7 0"		// 0.9
		
		link origin
	}
	
	sceneCamera head_cam {
		range "1300"
		fov 60
		
		link head_cam_joint
	}



	///////////////////////////////////////////////////////////////
	// physical representations
	///////////////////////////////////////////////////////////////
	
	physBody {
		massType box
		massTotal 12.0
		massDimensions "0.7 1.4 0.7"
		
		turnHead true
		maxAngularSpeed 0.0
		gravity true
		killTorque true	
		linearDamping 0.3
		autoDisable false
		
		link origin
	}

	physGeom {
		type bipedal
		friction 10.0
		capRadius 0.45
		length 1.1
		category "player"
		
		link physBody		
	}

	
	
	///////////////////////////////////////////////////////////////
	// controller, gets events directly from the player
	///////////////////////////////////////////////////////////////
			
	controller {
		type firstperson

		deltaPlane 	55000.0
		jumpForce 800000
		jumpTime 0.03
		airControl 0.15
		usePhysics true			// apply forces

		camera head_cam			// bind camera, should be updated by view
		control physBody		// bind component to control
		view head_cam_joint		// node to control viewing direction
	}
	
}

