
world {
	sceneNode {
		origin "1 2 3" 
	}
	
	worldInfo {
		ambientLight "1 1 1"
		playerController player:controller
		gravity "0 0 0"
	}
}

box1 {
	sceneNode {
		//parent world:sceneNode
		origin "0 1 10"
		
		model "gen:cube width 3.0 height 1.0 depth 1.0 texwidth 3"
	}
	
	timer materialChanger {
		interval 1.0
	}
	
	timer timer2 {
		interval 0.05
		enabled false
	}
	
	
	soundLocal {
		link sceneNode
		
	} 
	
	physBody {
		link sceneNode
	}

	physGeom {
		type box
		dimensions "3 1 1"
		link physBody
		friction 2

	}
}


ground {
	sceneNode {
		origin "0 0 0"
		material "dirt03"
		model "gen:cube width 100.0 height 1.0 depth 100.0 texwidth 100.0 texdepth 100.0"
		
	}
	
	physGeom {
		type box
		dimensions "100 1 100"
	}

}

player {
	///////////////////////////////////////////////////////////////
	// visual & spatial representations
	///////////////////////////////////////////////////////////////
	
	sceneNode origin {
		origin "0 2 0"
	}
	
	sceneNode head_cam_joint {
		origin "0 0.7 0"		// 0.9
		
		link origin
	}
	
	sceneCamera head_cam {
		range "1300"
		fov 60
		
		link head_cam_joint
	}



	///////////////////////////////////////////////////////////////
	// physical representations
	///////////////////////////////////////////////////////////////
	
	physBody {
		massType box
		massTotal 12.0
		massDimensions "0.7 1.4 0.7"
		
		turnHead true
		maxAngularSpeed 0.0
		gravity true
		killTorque true	
		linearDamping 0.3
		autoDisable false
		
		link origin
	}

	physGeom {
		type bipedal
		friction 10.0
		capRadius 0.45
		length 1.1
		category "player"
		
		link physBody		
	}

	
	
	///////////////////////////////////////////////////////////////
	// controller, gets events directly from the player
	///////////////////////////////////////////////////////////////
			
	controller {
		type firstperson

		deltaPlane 	55000.0
		jumpForce 800000
		jumpTime 0.03
		airControl 0.15
		usePhysics true			// apply forces

		camera head_cam			// bind camera, should be updated by view
		control physBody		// bind component to control
		view head_cam_joint		// node to control viewing direction
	}
	
}

