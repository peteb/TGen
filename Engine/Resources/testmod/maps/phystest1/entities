step {
	sceneNode {
		model "gen:cube width 4 height 3 depth 4"
		origin "-8 0 -8"
	}
	

	physGeom {
		type box

		dimensions "4 3 4"
	}
}

class pillar {
	sceneNode {
		model "gen:cube width 1 height 4.6 depth 1"
		material "lfwall14g3trim"
	}
	

	physGeom {
		type box

		dimensions "1 4.6 1"
	}
}

pillar1 extends pillar {
	sceneNode {
		origin "0 1.2 8"
	}
}

pillar2 extends pillar {
	sceneNode {
		origin "0 1.2 4"
	}
}

pillar3 extends pillar {
	sceneNode {
		origin "0 1.2 0"
	}
}

pillar4 extends pillar {
	sceneNode {
		origin "0 1.2 -4"
	}
}




step2 {
	sceneNode {
		model "gen:cube width 4 height 3 depth 4"
		origin "-4 2 -8"
	}
	

	physGeom {
		type box

		dimensions "4 3 4"
	}
}

step3 {
	sceneNode {
		model "gen:cube width 14 height 0.2 depth 20 texwidth 2 texdepth 4 texheight 0.03"
		origin "5 3.5 0"
		material "floor_metal_plate"
	}
	
	
	physGeom {
		type box

		dimensions "14 0.2 20"
	}
}


box8 {
	sceneNode {
		model "gen:cube width 1 height 1 depth 1" 
		origin "0 8 0"
		material "squaretile"
	}
	
	physBody {
		mass box {
			total 3.0
			dimensions "1.0 1.0 1.0"
		}
		
		gravity true
	}
		
	physGeom {
		type box
		friction 30.0
		dimensions "1 1 1"
	}
	
	script {
		onNodeAttached "map/_area04" {
			trigger "objectiveReachedArea(this, 'map/_area04')"
		}
		
		onNodeDetached "map/_area04" {
			trigger "objectiveLeftArea(this, 'map/_area04')"
		}
		
		onCollision "thatBigMonster" {
			trigger "objectiveTouchedMonster(this)"
		}
	}
}

box9 {
	sceneNode {
		model "gen:cube width 1 height 1 depth 1" 
		origin "2 8 0"
		material "lfwall4"
	}
	
	physBody {
		mass box {
			total 10.0
			dimensions "1.0 1.0 1.0"
		}
		
		gravity true
	}
		
	physGeom {
		type box
		friction "50"
		dimensions "1 1 1"
	}
}
box9 {
	sceneNode {
		model "gen:cube width 1 height 1 depth 1" 
		origin "-4 8 0"
	}
	
	physBody {
		mass box {
			total 5.0
			dimensions "1.0 1.0 1.0"
		}
		
		gravity true
	}
		
	physGeom {
		type box
		
		dimensions "1 1 1"
	}
}
box9 {
	sceneNode {
		model "gen:cube width 1 height 1 depth 1" 
		origin "-4 8 0"
	}
	
	physBody {
		mass box {
			total 5.0
			dimensions "1.0 1.0 1.0"
		}
		
		gravity true
	}
		
	physGeom {
		type box
		
		dimensions "1 1 1"
	}
}
box9 {
	sceneNode {
		model "gen:cube width 1 height 1 depth 1" 
		origin "-4 8 0"
	}
	
	physBody {
		mass box {
			total 5.0
			dimensions "1.0 1.0 1.0"
		}
		
		gravity true
	}
		
	physGeom {
		type box
		
		dimensions "1 1 1"
	}
}

ground2 {
	sceneNode {
		model "gen:cube width 20 height 20 depth 0.05"
		material "Cube"
		origin "0 -1 0"
		orientation "-0.1 1 0"
	}
	
	physGeom {
		type box
		dimensions "20 20 0.05"
	}

}

ground 6 {
	sceneNode {
		model "gen:cube width 20 height 7 depth 0.05 texwidth 4 textheight 2"
		material "a_superpipes"
		origin "-10 6.5 0"
		orientation "1 0 0"
	}
	
	physGeom {
		type box
		dimensions "20 7 0.05"
	}

}

class wall1 {
	sceneNode {
		model "gen:cube width 8 height 5 depth 0.05 texwidth 4"
		material "sopanel27"
		orientation "1 0 0"
	}
	
	physGeom {
		type box
		dimensions "8 5 0.05"
	}
}

wall11 extends wall1 {
	sceneNode {
		origin "-10 0.5 -6"

	}
}

wall12 extends wall1 {
	sceneNode {
		origin "-10 0.5 6"
	}
}

corridfloor {
	sceneNode {
		material "wornmetalplate"
		model "gen:cube width 40 height 0.1 depth 6 texwidth 20 texdepth 2.5"
		origin "-30 -2.05 -1"
	}
	
	physGeom {
		type box
		dimensions "40 0.1 6"
	}
}

/*deepfloor {
	sceneNode {
		material "wornmetalplate"
		//model "gen:cube width 4000 height 0.1 depth 600 texwidth 2000 texdepth 250"
		origin "-30 -40.05 -1"
	}
	
	physGeom {
		type box
		dimensions "4000 0.1 600"
	}
}*/

corridceiling {
	sceneNode {
		material "squaretile"
		model "gen:cube width 40 height 0.05 depth 16 texwidth 15 texdepth 8"
		origin "-30 3 -6"
	}
	
	physGeom {
		type box
		dimensions "40 0.05 16"
	}
}


class wall2 {
	sceneNode {
		model "gen:cube width 30 height 12 depth 0.05 texwidth 8 texheight 2.5"
		material "redbrick"
	}
	
	physGeom {
		type box
		dimensions "30 12 0.05"
	}
}

wall21 extends wall2 {
	sceneNode {
		origin "-25 -3.0 2"
	}
}


wall21 extends wall2 {
	sceneNode {
		origin "-25 -3.0 -2"
	}
}

sroomwall1 {
	sceneNode {
		model "gen:cube width 10 height 10 depth 0.05 texwidth 3 texheight 2" 
		material "skpanel1a"
		origin "-45 -2 2"
	}
	
	physGeom {
		type box
		dimensions "10 10 0.05"
	}
}

sroomwall2 {
	sceneNode {
		model "gen:cube width 0.05 height 10 depth 24 texdepth 10 texheight 2" 
		material "skpanel1a"
		origin "-50 -2.0 -10"
	}
	
	physGeom {
		type box
		dimensions "0.05 10 24"
	}
}

sroomwall3 {
	sceneNode {
		model "gen:cube width 0.05 height 10 depth 12 texdepth 4 texheight 2" 
		material "skpanel1a"
		origin "-40 -2 -8"
	}

	
	physGeom {
		type box
		dimensions "0.05 10 12"
	}
}

sroomwall4 {
	sceneNode {
		model "gen:cube width 30 height 10 depth 0.05 texwidth 12.5 texheight 2"
		material "skpanel1a"
		origin "-35 -2 -20"
	}
	
	physGeom {
		type "box"
		dimensions "30 10 0.05"
	}

}

sroomwall4 {
	sceneNode {
		model "gen:cube width 30 height 10 depth 0.05 texwidth 12.5 texheight 2"
		material "skpanel1a"
		origin "-25 -2 -14"
	}
	
	physGeom {
		type "box"
		dimensions "30 10 0.05"
	}

}


thres4 {
	sceneNode {
		model "gen:cube width 30 height 0.4 depth 0.4 texwidth 8 texheight 2"
		origin "-34.75 -7.2 -20.0"
		material "lfwall14g3trim"
	}
	
	physGeom {
		type box
		dimensions "30 0.4 0.4"
	}
}

ramp {
	sceneNode {
		model "gen:cube width 6.5 height 0.1 depth 30 texwidth 4d texdepth 20"
		origin "-30 -5 -16.8"
		orientation "2.0 0.5 0.0"
		material "wornmetalplate"
	}
	
	physGeom {
		type "box"
		dimensions "6.5 0.1 30"
	}
}

thres1 {
	sceneNode {
		model "gen:cube width 0.4 height 0.4 depth 12 texdepth 8 texwidth 2"
		origin "-40.025 -7.2 -8"
		material "lfwall14g3trim"
	}
	
	physGeom {
		type box
		dimensions "0.4 0.4 12"
	}

}

thres1 {
	sceneNode {
		model "gen:cube width 0.4 height 0.4 depth 24 texdepth 10 texwidth 2 texheight 2"
		origin "-49.975 -7.2 -8"
		material "lfwall14g3trim"
	}
	
	physGeom {
		type box
		dimensions "0.4 0.4 24"
	}

}


thres1 {
	sceneNode {
		model "gen:cube width 10 height 0.4 depth 0.4 texwidth 8 texheight 2"
		origin "-45 -7.2 2"
		material "lfwall14g3trim"
	}
	
	physGeom {
		type box
		dimensions "10 0.4 0.4"
	}
}


class stairstep {
	sceneNode {
		model "gen:cube width 4 depth 1 height 0.1 texwidth 4"
		material "wornmetalplate"
	}

}

step extends stairstep {
	sceneNode {
		origin "-48 -2.5 -4.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -3.0 -5.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -3.5 -6.5"
	}
}


step extends stairstep {
	sceneNode {
		origin "-48 -4.0 -7.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -4.5 -8.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -5.0 -9.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -5.5 -10.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -6.0 -11.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -6.5 -12.5"
	}
}

step extends stairstep {
	sceneNode {
		origin "-48 -7.0 -13.5"
	}
}

stepramp {
	sceneNode {
		origin "-48 -4.8 -9.5"
		//model "gen:cube width 4 height 0.1 depth 12"
		orientation "0 0.5 1"
	}
	
	physGeom {
		type "box"
		dimensions "4 0.1 12" 
	}
}

sroomfloor {
	sceneNode {
		origin "-20 -7.5 -5"
		model "gen:cube width 60 height 0.1 depth 30 texwidth 15 texdepth 7"
		material "subwaybricks"
	}
	
	physGeom {
		type "box"
		dimensions "60 0.1 30"
	}

}



ground5 {
	physGeom {
		type box
		dimensions "20 20 0.05"		
	}
	
	sceneNode {
		//model "gen:cube width '1.0' height '1.0' depth '1.0'" 
		//model "models/kub.md3 scale '1.0'"
		model "gen:cube width '20.0' height '20.0' depth '0.05'" 
		material "a_superpipes"
		origin "0 0 -10"
		orientation "0 0 -1"
	}

}

ceiling {  // sky
	sceneNode {
		model "gen:cube width '800.0' height '0.05' depth '800.0' texwidth 10 texdepth 10"
		material "Sky"
		origin "0 15 0"
	}
}



light1 {
	sceneLight {
		material "deferred/lightDirectional"
		orientation "0.2 0.5 0"
		diffuse "0.2 0.2 0.2 1.0"
		specular "0.85"
	}
}

maincam {
	sceneCamera {
		origin "0 2 2"
		orientation "0 0 1"
		range "500"
	}

	sound {
		local {
			randomize {
				delay "direct"
				"sounds/sound1"
			}
		}
	}
}

// TODO: ********* mouse control, subclass PlayerController -> FPSController
// TODO: grafiken är konstig när man flyttar kameran, t ex
//       glowen blir kraftigare (lampor som adderar styrka?)
//       och pointlights som hoppar runt!!!!!
// TODO: egen glowmap, lampor måste ju kunna påverka den. nu skriver lampor förmodligen till alla buffrar, inklusive normal och misc!!
//       blir hemkst skumt och fel, gröna lampor = påverkar mycket i gröna kanalen, vilket är glowkanalen.


class MyArcball {
	sceneNode exhibit {
		origin "0 2 0"
	}

	sceneCamera Cam {
		origin "0 2 2"
		range "500"
	}
	
	sceneLight lig {
		material "deferred/lightPositional"
		//treePosition "player_start/"
		diffuse "0.2 0.8 0.2 1"
		specular "0.8"
		range "2.5 2.5 2.5"
		origin "0 1 0"
		model "gen:cube width 5.0 height 5.0 depth 5.0"		// generera en boundingbox
	}
	
	controller {
		type arcball
		
		camera Cam
		control exhibit
	}
}

/*player_start extends MyArcball {
	sceneNode exhibit {
		model "models/detonics.md3 scale 0.2"
		material "detonics"
	}
}*/

class ghost_cam {
	sceneNode main {
		globalName "player_start"
		
		origin "2 8 0"
	}
	
	/*sceneNode {
		model "models/detonics.md3 scale 0.1"
		material "Cube2"		
		origin "0.3 -0.5 -1.2"
		orientation "1.0 0 0.05"
		
		treePosition "player_start/"
	}*/
	
	sceneNode CamHead {
		treePosition "player_start/"
		globalName "camhead"
		origin "0 1 0"
	}
	
	sceneCamera HeadCam {		// definiera kameran "HeadCam"
		range "500"				// viewing range, used to calculate clipping planes and LOD

		treePosition "player_start/camhead/"	// länka den med entitetens sceneNode
		globalName "cam"
	}
		
	
	/*sceneNode {
		model "models/railgun.md3 preset q3 scale 0.1"
		//material "Cube2"		
		origin "0.5 -1.0 -0.3"
		orientation "1.0 0 0.05"
		//origin "0 0 4"
		treePosition "player_start/camhead/"
		globalName "viewgun"
	}*/


	
	/*physBody {
		mass box {
			total 1.0
			dimensions "2 2 2"
		}
		
		turnHead true
		maxAngularSpeed 0.0
		gravity true
		link main
		killTorque true	
		linearDamping 0.07
		//fakeGrav 0.0
	}
	*/
	
	physGeom {
		type box
		/*friction 90.0
		capRadius 1.0
		length 2*/
		dimensions "2 2 2"
		
		link main
	}
		

	
	controller {				// controller component
		type firstperson

		//deltaPlane 	69000.0
		deltaPlane 	12.0

		jumpForce 1300000
		jumpTime 0.01 //0.2
		airControl 0.08
		
		usePhysics false			// apply forces
		camera HeadCam			// bind camera
		control main		// bind node to control
		view CamHead
	}
	

}


class phys_cam {
	sceneNode main {
		globalName "player_start"
		
		origin "2 8 0"
	}
	
	/*sceneNode {
		model "models/detonics.md3 scale 0.1"
		material "Cube2"		
		origin "0.3 -0.5 -1.2"
		orientation "1.0 0 0.05"
		
		treePosition "player_start/"
	}*/
	
	sceneNode CamHead {
		treePosition "player_start/"
		globalName "camhead"
		origin "0 1.3 0"
	}
	
	sceneCamera HeadCam {		// definiera kameran "HeadCam"
		range "500"				// viewing range, used to calculate clipping planes and LOD

		treePosition "player_start/camhead/"	// länka den med entitetens sceneNode
		globalName "cam"
		fov 60
	}
		
	
	/*sceneNode {
		model "models/railgun.md3 preset q3 scale 0.1"
		//material "Cube2"		
		origin "0.5 -1.0 -0.3"
		orientation "1.0 0 0.05"
		//origin "0 0 4"
		treePosition "player_start/camhead/"
		globalName "viewgun"
	}*/


	
	physBody {
		mass box {
			total 1.0
			dimensions "2 2 2"
		}
		
		turnHead true
		maxAngularSpeed 0.0
		gravity true
		link main
		killTorque true	
		linearDamping 0.07
		//fakeGrav 0.0
	}
	
	
	physGeom {
		type bipedal
		friction 90.0
		capRadius 1.0
		length 2
	}
		

	
	controller {				// controller component
		type firstperson

		deltaPlane 	88000.0

		jumpForce 1500000
		jumpTime 0.03 //0.2
		airControl 0.15
		
		usePhysics true			// apply forces
		camera HeadCam			// bind camera
		control physBody		// bind node to control
		view CamHead
	}
	

}

player_start extends phys_cam {
	sceneNode main {
		origin "-40 -40 -60"
	}
}

testmap2 {
	sceneMap {
		//  "maps/phystest1/omega1.proc"   //
		model "maps/phystest1/corrids.proc"     // "maps/phystest1/demo_mars_city1.proc"
		//model "maps/phystest1/demo_mars_city1.proc"
		
		//origin "-27 -51 8"
		origin "-40 -43 -60"
	}

	physGeom {
		type id4cm
		model "maps/phystest1/corrids.cm"
		//model "maps/phystest1/demo_mars_city1.cm"
		
		link sceneMap
	}
}

jumpbox {
	sceneNode transbase {
		origin "-40 -42 -60"
		globalName "transbase"
	}
	
	sceneTransform transsine {
		transPosition {
			type sine
			axis "0 1 0"
			phase 0
			amplitude 0.12
			frequency 1
		}
		
		transOrientation {
			type const
			axis "0 1 0"
			base 0
			frequency 0.6
			amplitude 1
			
			relative false
		}
		
		treePosition "transbase"
		globalName "transsine"
	}
	
	sceneNode hm {
		model "models/powerups/ammo/railgunam.md3 preset q3 scale 0.04"
		treePosition "transbase/transsine"
		//autoTP "testmap2"		// TODO: autoTP funkar inte bra när den bobbar runt, kan bero på att treePosition är kört!!!!
								// MÅSTE kunna referera till nodes i entiteten utan att använda scenenodenamnet
								// eller så utförs inte autoTP när nodesen laddas...
								// första valet är klart bättre, men hur gör man det, jo en ny property! link!! :D
								// syntax: link {entity:}component
	}
}

class stackedbox {
	sceneNode {
		model "models/powerups/ammo/railgunam.md3 preset q3 scale 0.04"
	}
	
	physBody {
		mass box {
			total 3.0
			dimensions "0.95 0.8 1.15"
		}
		
		gravity false
	}
	
	physGeom {
		type box
		dimensions "0.95 0.8 1.15"
		friction 30.0

	}
}


worldinfo {	// global stuff, will be overriden by areainfo (attached to current node)
	sound {
	
	}
}

// TODO: riktig dt, in i scenenodes

sbox extends stackedbox {
	sceneNode {
		origin "-40 -42 -45"
	}
}

sbox extends stackedbox {
	sceneNode {
		origin "-41 -42 -45"
	}
}

sbox extends stackedbox {
	sceneNode {
		origin "-39 -42 -45"
	}
}

sbox extends stackedbox {
	sceneNode {
		origin "-40 -41 -45"
	}
}


